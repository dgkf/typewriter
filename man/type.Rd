% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/type.R
\name{type}
\alias{type}
\title{Post-process a function defintion to apply type constraints}
\usage{
type(fn, ...)
}
\arguments{
\item{fn}{A function to post-process}
}
\value{
\code{fn} with type annotations stripped from the function header and
passed instead to a call to \code{type_check}.
}
\description{
This function interprets the syntactic typing sugar and produces a standard R
function, stripping type annotations from the function header and embedding
them as a call to \code{type_check} as the first expression in the function body.
}
\examples{
fn <- type(function(a = 1 :numeric) {
  print(a + 2)
})

fn
#> function (a = 1) {
#>   type_constrain(type_check(character(0), a = numeric))
#>   print(a + 2)
#> }

fn(3)
#> [1] 5

fn("test")
#> Error in throw_type_check_error(signature, name) :
#>   Type of parameter 'a' does not match signature `numeric`

}
